# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, International Digital Economy Academy
# This file is distributed under the same license as the MoonBit Document
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MoonBit Document \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-27 13:35+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../toolchain/index.md:9 ../../toolchain/moon/index.md:3
msgid "Contents:"
msgstr ""

#: ../../toolchain/index.md:1
msgid "Toolchains"
msgstr ""

#: ../../toolchain/index.md:3
msgid ""
"Here are some manuals that may help you use the toolchains of the "
"programming language:"
msgstr ""

#: ../../toolchain/index.md:5
msgid ""
"[MoonBit's Build System](./moon/index.md): full manual of `moon` build "
"system."
msgstr ""

#: ../../toolchain/index.md:6
msgid "VSCode extension"
msgstr ""

#: ../../toolchain/index.md:7
msgid "..."
msgstr ""

#: ../../toolchain/moon/commands.md:1
msgid "Command-Line Help for `moon`"
msgstr ""

#: ../../toolchain/moon/commands.md:3
msgid ""
"This document contains the help content for the `moon` command-line "
"program."
msgstr ""

#: ../../toolchain/moon/commands.md:5
msgid "**Command Overview:**"
msgstr ""

#: ../../toolchain/moon/commands.md:7
msgid "[`moon`↴](#moon)"
msgstr ""

#: ../../toolchain/moon/commands.md:8
msgid "[`moon new`↴](#moon-new)"
msgstr ""

#: ../../toolchain/moon/commands.md:9
msgid "[`moon build`↴](#moon-build)"
msgstr ""

#: ../../toolchain/moon/commands.md:10
msgid "[`moon check`↴](#moon-check)"
msgstr ""

#: ../../toolchain/moon/commands.md:11
msgid "[`moon run`↴](#moon-run)"
msgstr ""

#: ../../toolchain/moon/commands.md:12
msgid "[`moon test`↴](#moon-test)"
msgstr ""

#: ../../toolchain/moon/commands.md:13
msgid "[`moon clean`↴](#moon-clean)"
msgstr ""

#: ../../toolchain/moon/commands.md:14
msgid "[`moon fmt`↴](#moon-fmt)"
msgstr ""

#: ../../toolchain/moon/commands.md:15
msgid "[`moon doc`↴](#moon-doc)"
msgstr ""

#: ../../toolchain/moon/commands.md:16
msgid "[`moon info`↴](#moon-info)"
msgstr ""

#: ../../toolchain/moon/commands.md:17
msgid "[`moon add`↴](#moon-add)"
msgstr ""

#: ../../toolchain/moon/commands.md:18
msgid "[`moon remove`↴](#moon-remove)"
msgstr ""

#: ../../toolchain/moon/commands.md:19
msgid "[`moon install`↴](#moon-install)"
msgstr ""

#: ../../toolchain/moon/commands.md:20
msgid "[`moon tree`↴](#moon-tree)"
msgstr ""

#: ../../toolchain/moon/commands.md:21
msgid "[`moon login`↴](#moon-login)"
msgstr ""

#: ../../toolchain/moon/commands.md:22
msgid "[`moon register`↴](#moon-register)"
msgstr ""

#: ../../toolchain/moon/commands.md:23
msgid "[`moon publish`↴](#moon-publish)"
msgstr ""

#: ../../toolchain/moon/commands.md:24
msgid "[`moon package`↴](#moon-package)"
msgstr ""

#: ../../toolchain/moon/commands.md:25
msgid "[`moon update`↴](#moon-update)"
msgstr ""

#: ../../toolchain/moon/commands.md:26
msgid "[`moon coverage`↴](#moon-coverage)"
msgstr ""

#: ../../toolchain/moon/commands.md:27
msgid "[`moon coverage report`↴](#moon-coverage-report)"
msgstr ""

#: ../../toolchain/moon/commands.md:28
msgid "[`moon coverage clean`↴](#moon-coverage-clean)"
msgstr ""

#: ../../toolchain/moon/commands.md:29
msgid "[`moon generate-build-matrix`↴](#moon-generate-build-matrix)"
msgstr ""

#: ../../toolchain/moon/commands.md:30
msgid "[`moon upgrade`↴](#moon-upgrade)"
msgstr ""

#: ../../toolchain/moon/commands.md:31
msgid "[`moon shell-completion`↴](#moon-shell-completion)"
msgstr ""

#: ../../toolchain/moon/commands.md:32
msgid "[`moon version`↴](#moon-version)"
msgstr ""

#: ../../toolchain/moon/commands.md:34
msgid "`moon`"
msgstr ""

#: ../../toolchain/moon/commands.md:36
msgid "**Usage:** `moon <COMMAND>`"
msgstr ""

#: ../../toolchain/moon/commands.md:38 ../../toolchain/moon/commands.md:376
msgid "**Subcommands:**"
msgstr ""

#: ../../toolchain/moon/commands.md:40
msgid "`new` — Create a new MoonBit module"
msgstr ""

#: ../../toolchain/moon/commands.md:41
msgid "`build` — Build the current package"
msgstr ""

#: ../../toolchain/moon/commands.md:42
msgid "`check` — Check the current package, but don't build object files"
msgstr ""

#: ../../toolchain/moon/commands.md:43
msgid "`run` — Run a main package"
msgstr ""

#: ../../toolchain/moon/commands.md:44
msgid "`test` — Test the current package"
msgstr ""

#: ../../toolchain/moon/commands.md:45
msgid "`clean` — Remove the target directory"
msgstr ""

#: ../../toolchain/moon/commands.md:46
msgid "`fmt` — Format source code"
msgstr ""

#: ../../toolchain/moon/commands.md:47
msgid "`doc` — Generate documentation"
msgstr ""

#: ../../toolchain/moon/commands.md:48
msgid ""
"`info` — Generate public interface (`.mbti`) files for all packages in "
"the module"
msgstr ""

#: ../../toolchain/moon/commands.md:49
msgid "`add` — Add a dependency"
msgstr ""

#: ../../toolchain/moon/commands.md:50
msgid "`remove` — Remove a dependency"
msgstr ""

#: ../../toolchain/moon/commands.md:51
msgid "`install` — Install dependencies"
msgstr ""

#: ../../toolchain/moon/commands.md:52
msgid "`tree` — Display the dependency tree"
msgstr ""

#: ../../toolchain/moon/commands.md:53
msgid "`login` — Log in to your account"
msgstr ""

#: ../../toolchain/moon/commands.md:54
msgid "`register` — Register an account at mooncakes.io"
msgstr ""

#: ../../toolchain/moon/commands.md:55
msgid "`publish` — Publish the current module"
msgstr ""

#: ../../toolchain/moon/commands.md:56
msgid "`package` — Package the current module"
msgstr ""

#: ../../toolchain/moon/commands.md:57
msgid "`update` — Update the package registry index"
msgstr ""

#: ../../toolchain/moon/commands.md:58
msgid "`coverage` — Code coverage utilities"
msgstr ""

#: ../../toolchain/moon/commands.md:59
msgid ""
"`generate-build-matrix` — Generate build matrix for benchmarking (legacy "
"feature)"
msgstr ""

#: ../../toolchain/moon/commands.md:60
msgid "`upgrade` — Upgrade toolchains"
msgstr ""

#: ../../toolchain/moon/commands.md:61
msgid ""
"`shell-completion` — Generate shell completion for "
"bash/elvish/fish/pwsh/zsh to stdout"
msgstr ""

#: ../../toolchain/moon/commands.md:62
msgid "`version` — Print version information and exit"
msgstr ""

#: ../../toolchain/moon/commands.md:66
msgid "`moon new`"
msgstr ""

#: ../../toolchain/moon/commands.md:68
msgid "Create a new MoonBit module"
msgstr ""

#: ../../toolchain/moon/commands.md:70
msgid "**Usage:** `moon new [OPTIONS] [PACKAGE_NAME]`"
msgstr ""

#: ../../toolchain/moon/commands.md:72 ../../toolchain/moon/commands.md:122
#: ../../toolchain/moon/commands.md:156 ../../toolchain/moon/commands.md:234
#: ../../toolchain/moon/commands.md:287 ../../toolchain/moon/commands.md:299
#: ../../toolchain/moon/commands.md:389
msgid "**Arguments:**"
msgstr ""

#: ../../toolchain/moon/commands.md:74
msgid "`<PACKAGE_NAME>` — The name of the package"
msgstr ""

#: ../../toolchain/moon/commands.md:76 ../../toolchain/moon/commands.md:95
#: ../../toolchain/moon/commands.md:126 ../../toolchain/moon/commands.md:161
#: ../../toolchain/moon/commands.md:188 ../../toolchain/moon/commands.md:238
#: ../../toolchain/moon/commands.md:255 ../../toolchain/moon/commands.md:274
#: ../../toolchain/moon/commands.md:343 ../../toolchain/moon/commands.md:355
#: ../../toolchain/moon/commands.md:393 ../../toolchain/moon/commands.md:413
#: ../../toolchain/moon/commands.md:430 ../../toolchain/moon/commands.md:575
#: ../../toolchain/moon/commands.md:592
msgid "**Options:**"
msgstr ""

#: ../../toolchain/moon/commands.md:78
msgid "`--lib` — Create a library package instead of an executable"
msgstr ""

#: ../../toolchain/moon/commands.md:79
msgid "`--path <PATH>` — Output path of the package"
msgstr ""

#: ../../toolchain/moon/commands.md:80
msgid "`--user <USER>` — The user name of the package"
msgstr ""

#: ../../toolchain/moon/commands.md:81
msgid "`--name <NAME>` — The name part of the package"
msgstr ""

#: ../../toolchain/moon/commands.md:82
msgid "`--license <LICENSE>` — The license of the package"
msgstr ""

#: ../../toolchain/moon/commands.md:84
msgid "Default value: `Apache-2.0`"
msgstr ""

#: ../../toolchain/moon/commands.md:85
msgid "`--no-license` — Do not set a license for the package"
msgstr ""

#: ../../toolchain/moon/commands.md:89
msgid "`moon build`"
msgstr ""

#: ../../toolchain/moon/commands.md:91
msgid "Build the current package"
msgstr ""

#: ../../toolchain/moon/commands.md:93
msgid "**Usage:** `moon build [OPTIONS]`"
msgstr ""

#: ../../toolchain/moon/commands.md:97 ../../toolchain/moon/commands.md:128
#: ../../toolchain/moon/commands.md:163 ../../toolchain/moon/commands.md:190
msgid "`--std` — Enable the standard library (default)"
msgstr ""

#: ../../toolchain/moon/commands.md:98 ../../toolchain/moon/commands.md:129
#: ../../toolchain/moon/commands.md:164 ../../toolchain/moon/commands.md:191
msgid "`--nostd` — Disable the standard library"
msgstr ""

#: ../../toolchain/moon/commands.md:99 ../../toolchain/moon/commands.md:130
#: ../../toolchain/moon/commands.md:165 ../../toolchain/moon/commands.md:192
msgid "`-g`, `--debug` — Emit debug information"
msgstr ""

#: ../../toolchain/moon/commands.md:100 ../../toolchain/moon/commands.md:131
#: ../../toolchain/moon/commands.md:166 ../../toolchain/moon/commands.md:193
msgid "`--release` — Compile in release mode"
msgstr ""

#: ../../toolchain/moon/commands.md:101 ../../toolchain/moon/commands.md:132
#: ../../toolchain/moon/commands.md:167 ../../toolchain/moon/commands.md:194
msgid "`--target <TARGET>` — Select output target"
msgstr ""

#: ../../toolchain/moon/commands.md:103 ../../toolchain/moon/commands.md:134
#: ../../toolchain/moon/commands.md:169 ../../toolchain/moon/commands.md:196
msgid "Possible values: `wasm`, `wasm-gc`, `js`, `native`, `all`"
msgstr ""

#: ../../toolchain/moon/commands.md:105 ../../toolchain/moon/commands.md:136
#: ../../toolchain/moon/commands.md:171 ../../toolchain/moon/commands.md:198
msgid "`--serial` — Handle the selected targets sequentially"
msgstr ""

#: ../../toolchain/moon/commands.md:106 ../../toolchain/moon/commands.md:137
#: ../../toolchain/moon/commands.md:172 ../../toolchain/moon/commands.md:199
msgid "`--enable-coverage` — Enable coverage instrumentation"
msgstr ""

#: ../../toolchain/moon/commands.md:107 ../../toolchain/moon/commands.md:138
#: ../../toolchain/moon/commands.md:173 ../../toolchain/moon/commands.md:200
#: ../../toolchain/moon/commands.md:241
msgid "`--sort-input` — Sort input files"
msgstr ""

#: ../../toolchain/moon/commands.md:108 ../../toolchain/moon/commands.md:139
#: ../../toolchain/moon/commands.md:174 ../../toolchain/moon/commands.md:201
msgid "`--output-wat` — Output WAT instead of WASM"
msgstr ""

#: ../../toolchain/moon/commands.md:109 ../../toolchain/moon/commands.md:140
#: ../../toolchain/moon/commands.md:175 ../../toolchain/moon/commands.md:202
msgid "`-d`, `--deny-warn` — Treat all warnings as errors"
msgstr ""

#: ../../toolchain/moon/commands.md:110 ../../toolchain/moon/commands.md:141
#: ../../toolchain/moon/commands.md:176 ../../toolchain/moon/commands.md:203
msgid ""
"`--no-render` — Don't render diagnostics from moonc (don't pass '-error-"
"format json' to moonc)"
msgstr ""

#: ../../toolchain/moon/commands.md:111 ../../toolchain/moon/commands.md:143
#: ../../toolchain/moon/commands.md:177 ../../toolchain/moon/commands.md:211
#: ../../toolchain/moon/commands.md:264 ../../toolchain/moon/commands.md:276
#: ../../toolchain/moon/commands.md:345 ../../toolchain/moon/commands.md:357
msgid ""
"`--frozen` — Do not sync dependencies, assuming local dependencies are "
"up-to-date"
msgstr ""

#: ../../toolchain/moon/commands.md:112
msgid ""
"`-w`, `--watch` — Monitor the file system and automatically build "
"artifacts"
msgstr ""

#: ../../toolchain/moon/commands.md:116
msgid "`moon check`"
msgstr ""

#: ../../toolchain/moon/commands.md:118
msgid "Check the current package, but don't build object files"
msgstr ""

#: ../../toolchain/moon/commands.md:120
msgid "**Usage:** `moon check [OPTIONS] [PACKAGE_PATH]`"
msgstr ""

#: ../../toolchain/moon/commands.md:124
msgid "`<PACKAGE_PATH>` — The package(and it's deps) to check"
msgstr ""

#: ../../toolchain/moon/commands.md:142
msgid "`--output-json` — Output in json format"
msgstr ""

#: ../../toolchain/moon/commands.md:144
msgid "`-w`, `--watch` — Monitor the file system and automatically check files"
msgstr ""

#: ../../toolchain/moon/commands.md:145
msgid ""
"`--patch-file <PATCH_FILE>` — The patch file to check, Only valid when "
"checking specified package"
msgstr ""

#: ../../toolchain/moon/commands.md:146
msgid ""
"`--no-mi` — Whether to skip the mi generation, Only valid when checking "
"specified package"
msgstr ""

#: ../../toolchain/moon/commands.md:150
msgid "`moon run`"
msgstr ""

#: ../../toolchain/moon/commands.md:152
msgid "Run a main package"
msgstr ""

#: ../../toolchain/moon/commands.md:154
msgid "**Usage:** `moon run [OPTIONS] <PACKAGE_OR_MBT_FILE> [ARGS]...`"
msgstr ""

#: ../../toolchain/moon/commands.md:158
msgid "`<PACKAGE_OR_MBT_FILE>` — The package or .mbt file to run"
msgstr ""

#: ../../toolchain/moon/commands.md:159
msgid "`<ARGS>` — The arguments provided to the program to be run"
msgstr ""

#: ../../toolchain/moon/commands.md:178
msgid "`--build-only` — Only build, do not run the code"
msgstr ""

#: ../../toolchain/moon/commands.md:182
msgid "`moon test`"
msgstr ""

#: ../../toolchain/moon/commands.md:184
msgid "Test the current package"
msgstr ""

#: ../../toolchain/moon/commands.md:186
msgid "**Usage:** `moon test [OPTIONS]`"
msgstr ""

#: ../../toolchain/moon/commands.md:204
msgid "`-p`, `--package <PACKAGE>` — Run test in the specified package"
msgstr ""

#: ../../toolchain/moon/commands.md:205
msgid ""
"`-f`, `--file <FILE>` — Run test in the specified file. Only valid when "
"`--package` is also specified"
msgstr ""

#: ../../toolchain/moon/commands.md:206
msgid ""
"`-i`, `--index <INDEX>` — Run only the index-th test in the file. Only "
"valid when `--file` is also specified"
msgstr ""

#: ../../toolchain/moon/commands.md:207
msgid "`-u`, `--update` — Update the test snapshot"
msgstr ""

#: ../../toolchain/moon/commands.md:208
msgid ""
"`-l`, `--limit <LIMIT>` — Limit of expect test update passes to run, in "
"order to avoid infinite loops"
msgstr ""

#: ../../toolchain/moon/commands.md:210
msgid "Default value: `256`"
msgstr ""

#: ../../toolchain/moon/commands.md:212
msgid "`--build-only` — Only build, do not run the tests"
msgstr ""

#: ../../toolchain/moon/commands.md:213
msgid "`--no-parallelize` — Run the tests in a target backend sequentially"
msgstr ""

#: ../../toolchain/moon/commands.md:214
msgid "`--test-failure-json` — Print failure message in JSON format"
msgstr ""

#: ../../toolchain/moon/commands.md:215
msgid "`--patch-file <PATCH_FILE>` — Path to the patch file"
msgstr ""

#: ../../toolchain/moon/commands.md:216
msgid "`--doc` — Run doc test"
msgstr ""

#: ../../toolchain/moon/commands.md:220
msgid "`moon clean`"
msgstr ""

#: ../../toolchain/moon/commands.md:222
msgid "Remove the target directory"
msgstr ""

#: ../../toolchain/moon/commands.md:224
msgid "**Usage:** `moon clean`"
msgstr ""

#: ../../toolchain/moon/commands.md:228
msgid "`moon fmt`"
msgstr ""

#: ../../toolchain/moon/commands.md:230
msgid "Format source code"
msgstr ""

#: ../../toolchain/moon/commands.md:232
msgid "**Usage:** `moon fmt [OPTIONS] [ARGS]...`"
msgstr ""

#: ../../toolchain/moon/commands.md:236
msgid "`<ARGS>`"
msgstr ""

#: ../../toolchain/moon/commands.md:240
msgid "`--check` — Check only and don't change the source code"
msgstr ""

#: ../../toolchain/moon/commands.md:242
msgid "`--block-style <BLOCK_STYLE>` — Add separator between each segments"
msgstr ""

#: ../../toolchain/moon/commands.md:244
msgid "Possible values: `false`, `true`"
msgstr ""

#: ../../toolchain/moon/commands.md:249
msgid "`moon doc`"
msgstr ""

#: ../../toolchain/moon/commands.md:251
msgid "Generate documentation"
msgstr ""

#: ../../toolchain/moon/commands.md:253
msgid "**Usage:** `moon doc [OPTIONS]`"
msgstr ""

#: ../../toolchain/moon/commands.md:257
msgid "`--serve` — Start a web server to serve the documentation"
msgstr ""

#: ../../toolchain/moon/commands.md:258
msgid "`-b`, `--bind <BIND>` — The address of the server"
msgstr ""

#: ../../toolchain/moon/commands.md:260
msgid "Default value: `127.0.0.1`"
msgstr ""

#: ../../toolchain/moon/commands.md:261
msgid "`-p`, `--port <PORT>` — The port of the server"
msgstr ""

#: ../../toolchain/moon/commands.md:263
msgid "Default value: `3000`"
msgstr ""

#: ../../toolchain/moon/commands.md:268
msgid "`moon info`"
msgstr ""

#: ../../toolchain/moon/commands.md:270
msgid "Generate public interface (`.mbti`) files for all packages in the module"
msgstr ""

#: ../../toolchain/moon/commands.md:272
msgid "**Usage:** `moon info [OPTIONS]`"
msgstr ""

#: ../../toolchain/moon/commands.md:277
msgid "`--no-alias` — Do not use alias to shorten package names in the output"
msgstr ""

#: ../../toolchain/moon/commands.md:281
msgid "`moon add`"
msgstr ""

#: ../../toolchain/moon/commands.md:283
msgid "Add a dependency"
msgstr ""

#: ../../toolchain/moon/commands.md:285
msgid "**Usage:** `moon add <PACKAGE_PATH>`"
msgstr ""

#: ../../toolchain/moon/commands.md:289
msgid "`<PACKAGE_PATH>` — The package path to add"
msgstr ""

#: ../../toolchain/moon/commands.md:293
msgid "`moon remove`"
msgstr ""

#: ../../toolchain/moon/commands.md:295
msgid "Remove a dependency"
msgstr ""

#: ../../toolchain/moon/commands.md:297
msgid "**Usage:** `moon remove <PACKAGE_PATH>`"
msgstr ""

#: ../../toolchain/moon/commands.md:301
msgid "`<PACKAGE_PATH>` — The package path to remove"
msgstr ""

#: ../../toolchain/moon/commands.md:305
msgid "`moon install`"
msgstr ""

#: ../../toolchain/moon/commands.md:307
msgid "Install dependencies"
msgstr ""

#: ../../toolchain/moon/commands.md:309
msgid "**Usage:** `moon install`"
msgstr ""

#: ../../toolchain/moon/commands.md:313
msgid "`moon tree`"
msgstr ""

#: ../../toolchain/moon/commands.md:315
msgid "Display the dependency tree"
msgstr ""

#: ../../toolchain/moon/commands.md:317
msgid "**Usage:** `moon tree`"
msgstr ""

#: ../../toolchain/moon/commands.md:321
msgid "`moon login`"
msgstr ""

#: ../../toolchain/moon/commands.md:323
msgid "Log in to your account"
msgstr ""

#: ../../toolchain/moon/commands.md:325
msgid "**Usage:** `moon login`"
msgstr ""

#: ../../toolchain/moon/commands.md:329
msgid "`moon register`"
msgstr ""

#: ../../toolchain/moon/commands.md:331
msgid "Register an account at mooncakes.io"
msgstr ""

#: ../../toolchain/moon/commands.md:333
msgid "**Usage:** `moon register`"
msgstr ""

#: ../../toolchain/moon/commands.md:337
msgid "`moon publish`"
msgstr ""

#: ../../toolchain/moon/commands.md:339
msgid "Publish the current module"
msgstr ""

#: ../../toolchain/moon/commands.md:341
msgid "**Usage:** `moon publish [OPTIONS]`"
msgstr ""

#: ../../toolchain/moon/commands.md:349
msgid "`moon package`"
msgstr ""

#: ../../toolchain/moon/commands.md:351
msgid "Package the current module"
msgstr ""

#: ../../toolchain/moon/commands.md:353
msgid "**Usage:** `moon package [OPTIONS]`"
msgstr ""

#: ../../toolchain/moon/commands.md:358
msgid "`--list`"
msgstr ""

#: ../../toolchain/moon/commands.md:362
msgid "`moon update`"
msgstr ""

#: ../../toolchain/moon/commands.md:364
msgid "Update the package registry index"
msgstr ""

#: ../../toolchain/moon/commands.md:366
msgid "**Usage:** `moon update`"
msgstr ""

#: ../../toolchain/moon/commands.md:370
msgid "`moon coverage`"
msgstr ""

#: ../../toolchain/moon/commands.md:372
msgid "Code coverage utilities"
msgstr ""

#: ../../toolchain/moon/commands.md:374
msgid "**Usage:** `moon coverage <COMMAND>`"
msgstr ""

#: ../../toolchain/moon/commands.md:378
msgid "`report` — Generate code coverage report"
msgstr ""

#: ../../toolchain/moon/commands.md:379
msgid "`clean` — Clean up coverage artifacts"
msgstr ""

#: ../../toolchain/moon/commands.md:383
msgid "`moon coverage report`"
msgstr ""

#: ../../toolchain/moon/commands.md:385
msgid "Generate code coverage report"
msgstr ""

#: ../../toolchain/moon/commands.md:387
msgid "**Usage:** `moon coverage report [args]... [COMMAND]`"
msgstr ""

#: ../../toolchain/moon/commands.md:391
msgid "`<args>` — Arguments to pass to the coverage utility"
msgstr ""

#: ../../toolchain/moon/commands.md:395
msgid "`-h`, `--help` — Show help for the coverage utility"
msgstr ""

#: ../../toolchain/moon/commands.md:399
msgid "`moon coverage clean`"
msgstr ""

#: ../../toolchain/moon/commands.md:401
msgid "Clean up coverage artifacts"
msgstr ""

#: ../../toolchain/moon/commands.md:403
msgid "**Usage:** `moon coverage clean`"
msgstr ""

#: ../../toolchain/moon/commands.md:407
msgid "`moon generate-build-matrix`"
msgstr ""

#: ../../toolchain/moon/commands.md:409
msgid "Generate build matrix for benchmarking (legacy feature)"
msgstr ""

#: ../../toolchain/moon/commands.md:411
msgid "**Usage:** `moon generate-build-matrix [OPTIONS] --output-dir <OUT_DIR>`"
msgstr ""

#: ../../toolchain/moon/commands.md:415
msgid ""
"`-n <NUMBER>` — Set all of `drow`, `dcol`, `mrow`, `mcol` to the same "
"value"
msgstr ""

#: ../../toolchain/moon/commands.md:416
msgid "`--drow <DIR_ROWS>` — Number of directory rows"
msgstr ""

#: ../../toolchain/moon/commands.md:417
msgid "`--dcol <DIR_COLS>` — Number of directory columns"
msgstr ""

#: ../../toolchain/moon/commands.md:418
msgid "`--mrow <MOD_ROWS>` — Number of module rows"
msgstr ""

#: ../../toolchain/moon/commands.md:419
msgid "`--mcol <MOD_COLS>` — Number of module columns"
msgstr ""

#: ../../toolchain/moon/commands.md:420
msgid "`-o`, `--output-dir <OUT_DIR>` — The output directory"
msgstr ""

#: ../../toolchain/moon/commands.md:424
msgid "`moon upgrade`"
msgstr ""

#: ../../toolchain/moon/commands.md:426
msgid "Upgrade toolchains"
msgstr ""

#: ../../toolchain/moon/commands.md:428
msgid "**Usage:** `moon upgrade [OPTIONS]`"
msgstr ""

#: ../../toolchain/moon/commands.md:432
msgid "`-f`, `--force` — Force upgrade"
msgstr ""

#: ../../toolchain/moon/commands.md:436
msgid "`moon shell-completion`"
msgstr ""

#: ../../toolchain/moon/commands.md:438
msgid "Generate shell completion for bash/elvish/fish/pwsh/zsh to stdout"
msgstr ""

#: ../../toolchain/moon/commands.md:440
msgid "**Usage:** `moon shell-completion [OPTIONS]`"
msgstr ""

#: ../../toolchain/moon/commands.md:443
msgid ""
"Discussion: Enable tab completion for Bash, Elvish, Fish, Zsh, or "
"PowerShell The script is output on `stdout`, allowing one to re-direct "
"the output to the file of their choosing. Where you place the file will "
"depend on which shell, and which operating system you are using. Your "
"particular configuration may also determine where these scripts need to "
"be placed."
msgstr ""

#: ../../toolchain/moon/commands.md:451
msgid ""
"The completion scripts won't update itself, so you may need to "
"periodically run this command to get the latest completions. Or you may "
"put `eval \"$(moon shell-completion --shell <SHELL>)\"` in your shell's "
"rc file to always load newest completions on startup. Although it's "
"considered not as efficient as having the completions script installed."
msgstr ""

#: ../../toolchain/moon/commands.md:458
msgid ""
"Here are some common set ups for the three supported shells under Unix "
"and similar operating systems (such as GNU/Linux)."
msgstr ""

#: ../../toolchain/moon/commands.md:461
msgid "Bash:"
msgstr ""

#: ../../toolchain/moon/commands.md:463
msgid ""
"Completion files are commonly stored in `/etc/bash_completion.d/` for "
"system-wide commands, but can be stored in `~/.local/share/bash-"
"completion/completions` for user-specific commands. Run the command:"
msgstr ""

#: ../../toolchain/moon/commands.md:468
msgid ""
"$ mkdir -p ~/.local/share/bash-completion/completions\n"
"$ moon shell-completion --shell bash >> ~/.local/share/bash-"
"completion/completions/moon\n"
msgstr ""

#: ../../toolchain/moon/commands.md:471 ../../toolchain/moon/commands.md:490
msgid ""
"This installs the completion script. You may have to log out and log back"
" in to your shell session for the changes to take effect."
msgstr ""

#: ../../toolchain/moon/commands.md:474
msgid "Bash (macOS/Homebrew):"
msgstr ""

#: ../../toolchain/moon/commands.md:476
msgid ""
"Homebrew stores bash completion files within the Homebrew directory. With"
" the `bash-completion` brew formula installed, run the command:"
msgstr ""

#: ../../toolchain/moon/commands.md:479
msgid ""
"$ mkdir -p $(brew --prefix)/etc/bash_completion.d\n"
"$ moon shell-completion --shell bash > $(brew "
"--prefix)/etc/bash_completion.d/moon.bash-completion\n"
msgstr ""

#: ../../toolchain/moon/commands.md:482
msgid "Fish:"
msgstr ""

#: ../../toolchain/moon/commands.md:484
msgid ""
"Fish completion files are commonly stored in "
"`$HOME/.config/fish/completions`. Run the command:"
msgstr ""

#: ../../toolchain/moon/commands.md:487
msgid ""
"$ mkdir -p ~/.config/fish/completions\n"
"$ moon shell-completion --shell fish > "
"~/.config/fish/completions/moon.fish\n"
msgstr ""

#: ../../toolchain/moon/commands.md:493
msgid "Elvish:"
msgstr ""

#: ../../toolchain/moon/commands.md:495
msgid ""
"Elvish completions are commonly stored in a single `completers` module. A"
" typical module search path is `~/.config/elvish/lib`, and running the "
"command:"
msgstr ""

#: ../../toolchain/moon/commands.md:499
msgid ""
"$ moon shell-completion --shell elvish >> "
"~/.config/elvish/lib/completers.elv\n"
msgstr ""

#: ../../toolchain/moon/commands.md:501
msgid ""
"will install the completions script. Note that use `>>` (append)  instead"
" of `>` (overwrite) to prevent overwriting the existing completions  for "
"other commands. Then prepend your rc.elv with:"
msgstr ""

#: ../../toolchain/moon/commands.md:505
msgid "`use completers`\n"
msgstr ""

#: ../../toolchain/moon/commands.md:507
msgid "to load the `completers` module and enable completions."
msgstr ""

#: ../../toolchain/moon/commands.md:509
msgid "Zsh:"
msgstr ""

#: ../../toolchain/moon/commands.md:511
msgid ""
"ZSH completions are commonly stored in any directory listed in your "
"`$fpath` variable. To use these completions, you must either add the "
"generated script to one of those directories, or add your own to this "
"list."
msgstr ""

#: ../../toolchain/moon/commands.md:516
msgid ""
"Adding a custom directory is often the safest bet if you are unsure of "
"which directory to use. First create the directory; for this example "
"we'll create a hidden directory inside our `$HOME` directory:"
msgstr ""

#: ../../toolchain/moon/commands.md:521
msgid "$ mkdir ~/.zfunc\n"
msgstr ""

#: ../../toolchain/moon/commands.md:523
msgid "Then add the following lines to your `.zshrc` just before `compinit`:"
msgstr ""

#: ../../toolchain/moon/commands.md:526
msgid "fpath+=~/.zfunc\n"
msgstr ""

#: ../../toolchain/moon/commands.md:528
msgid "Now you can install the completions script using the following command:"
msgstr ""

#: ../../toolchain/moon/commands.md:531
msgid "$ moon shell-completion --shell zsh > ~/.zfunc/_moon\n"
msgstr ""

#: ../../toolchain/moon/commands.md:533
msgid "You must then open a new zsh session, or simply run"
msgstr ""

#: ../../toolchain/moon/commands.md:535
msgid "$ . ~/.zshrc\n"
msgstr ""

#: ../../toolchain/moon/commands.md:537
msgid "for the new completions to take effect."
msgstr ""

#: ../../toolchain/moon/commands.md:539
msgid "Custom locations:"
msgstr ""

#: ../../toolchain/moon/commands.md:541
msgid ""
"Alternatively, you could save these files to the place of your choosing, "
"such as a custom directory inside your $HOME. Doing so will require you "
"to add the proper directives, such as `source`ing inside your login "
"script. Consult your shells documentation for how to add such directives."
msgstr ""

#: ../../toolchain/moon/commands.md:547
msgid "PowerShell:"
msgstr ""

#: ../../toolchain/moon/commands.md:549
msgid ""
"The powershell completion scripts require PowerShell v5.0+ (which comes "
"with Windows 10, but can be downloaded separately for windows 7 or 8.1)."
msgstr ""

#: ../../toolchain/moon/commands.md:553
msgid "First, check if a profile has already been set"
msgstr ""

#: ../../toolchain/moon/commands.md:555
msgid "PS C:\\> Test-Path $profile\n"
msgstr ""

#: ../../toolchain/moon/commands.md:557
msgid "If the above command returns `False` run the following"
msgstr ""

#: ../../toolchain/moon/commands.md:559
msgid "PS C:\\> New-Item -path $profile -type file -force\n"
msgstr ""

#: ../../toolchain/moon/commands.md:561
msgid ""
"Now open the file provided by `$profile` (if you used the `New-Item` "
"command it will be "
"`${env:USERPROFILE}\\Documents\\WindowsPowerShell\\Microsoft.PowerShell_profile.ps1`"
msgstr ""

#: ../../toolchain/moon/commands.md:565
msgid ""
"Next, we either save the completions file into our profile, or into a "
"separate file and source it inside our profile. To save the completions "
"into our profile simply use"
msgstr ""

#: ../../toolchain/moon/commands.md:569
msgid ""
"PS C:\\> moon shell-completion --shell powershell >>\n"
"${env:USERPROFILE}\\Documents\\WindowsPowerShell\\Microsoft.PowerShell_profile.ps1"
"\n"
msgstr ""

#: ../../toolchain/moon/commands.md:572
msgid ""
"This discussion is taken from `rustup completions` command with some "
"changes."
msgstr ""

#: ../../toolchain/moon/commands.md:577
msgid "`--shell <SHELL>` — The shell to generate completion for"
msgstr ""

#: ../../toolchain/moon/commands.md:579
msgid "Default value: `<your shell>`"
msgstr ""

#: ../../toolchain/moon/commands.md:581
msgid "Possible values: `bash`, `elvish`, `fish`, `powershell`, `zsh`"
msgstr ""

#: ../../toolchain/moon/commands.md:586
msgid "`moon version`"
msgstr ""

#: ../../toolchain/moon/commands.md:588
msgid "Print version information and exit"
msgstr ""

#: ../../toolchain/moon/commands.md:590
msgid "**Usage:** `moon version [OPTIONS]`"
msgstr ""

#: ../../toolchain/moon/commands.md:594
msgid "`--all` — Print all version information"
msgstr ""

#: ../../toolchain/moon/commands.md:595
msgid "`--json` — Print version information in JSON format"
msgstr ""

#: ../../toolchain/moon/commands.md:596
msgid "`--no-path` — Do not print the path"
msgstr ""

#: ../../toolchain/moon/commands.md:602
msgid ""
"<small><i>     This document was generated automatically by     <a "
"href=\"https://crates.io/crates/clap-markdown\"><code>clap-"
"markdown</code></a>. </i></small>"
msgstr ""

#: ../../toolchain/moon/index.md:1
msgid "Moon Build System"
msgstr ""

#: ../../toolchain/moon/module.md:1
msgid "Module Configuration"
msgstr ""

#: ../../toolchain/moon/module.md:3
msgid "moon uses the `moon.mod.json` file to identify and describe a module."
msgstr ""

#: ../../toolchain/moon/module.md:5 ../../toolchain/moon/package.md:5
msgid "Name"
msgstr ""

#: ../../toolchain/moon/module.md:7
msgid ""
"The `name` field is used to specify the name of the module, and it is "
"required."
msgstr ""

#: ../../toolchain/moon/module.md:9
msgid ""
"{\n"
"  \"name\": \"example\",\n"
"  ...\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/module.md:16
msgid "The module name can contain letters, numbers, `_`, `-`, and `/`."
msgstr ""

#: ../../toolchain/moon/module.md:18
msgid ""
"For modules published to [mooncakes.io](https://mooncakes.io), the module"
" name must begin with the username. For example:"
msgstr ""

#: ../../toolchain/moon/module.md:20
msgid ""
"{\n"
"  \"name\": \"moonbitlang/core\",\n"
"  ...\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/module.md:27
msgid "Version"
msgstr ""

#: ../../toolchain/moon/module.md:29
msgid "The `version` field is used to specify the version of the module."
msgstr ""

#: ../../toolchain/moon/module.md:31
msgid ""
"This field is optional. For modules published to "
"[mooncakes.io](https://mooncakes.io), the version number must follow the "
"[Semantic Versioning 2.0.0](https://semver.org/spec/v2.0.0.html) "
"specification."
msgstr ""

#: ../../toolchain/moon/module.md:33
msgid ""
"{\n"
"  \"name\": \"example\",\n"
"  \"version\": \"0.1.0\",\n"
"  ...\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/module.md:41
msgid "Deps"
msgstr ""

#: ../../toolchain/moon/module.md:43
msgid "The `deps` field is used to specify the dependencies of the module."
msgstr ""

#: ../../toolchain/moon/module.md:45
msgid "It is automatically managed by commands like `moon add` and `moon remove`."
msgstr ""

#: ../../toolchain/moon/module.md:47
msgid ""
"{\n"
"  \"name\": \"username/hello\",\n"
"  \"deps\": {\n"
"    \"moonbitlang/x\": \"0.4.6\"\n"
"  }\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/module.md:56
msgid "README"
msgstr ""

#: ../../toolchain/moon/module.md:58
msgid ""
"The `readme` field is used to specify the path to the module's README "
"file."
msgstr ""

#: ../../toolchain/moon/module.md:60
msgid "Repository"
msgstr ""

#: ../../toolchain/moon/module.md:62
msgid ""
"The `repository` field is used to specify the URL of the module's "
"repository."
msgstr ""

#: ../../toolchain/moon/module.md:64
msgid "License"
msgstr ""

#: ../../toolchain/moon/module.md:66
msgid ""
"The `license` field is used to specify the license of the module. The "
"license type must comply with the [SPDX License "
"List](https://spdx.org/licenses/)."
msgstr ""

#: ../../toolchain/moon/module.md:68
msgid ""
"{\n"
"  \"license\": \"MIT\"\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/module.md:74
msgid "Keywords"
msgstr ""

#: ../../toolchain/moon/module.md:76
msgid "The `keywords` field is used to specify the keywords for the module."
msgstr ""

#: ../../toolchain/moon/module.md:78
msgid ""
"{\n"
"  \"keywords\": [\"example\", \"test\"]\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/module.md:84
msgid "Description"
msgstr ""

#: ../../toolchain/moon/module.md:86
msgid "The `description` field is used to specify the description of the module."
msgstr ""

#: ../../toolchain/moon/module.md:88
msgid ""
"{\n"
"  \"description\": \"This is a description of the module.\"\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/module.md:94
msgid "Source directory"
msgstr ""

#: ../../toolchain/moon/module.md:96
msgid "The `source` field is used to specify the source directory of the module."
msgstr ""

#: ../../toolchain/moon/module.md:98
msgid ""
"It must be a subdirectory of the directory where the `moon.mod.json` file"
" is located and must be a relative path."
msgstr ""

#: ../../toolchain/moon/module.md:100
msgid ""
"When creating a module using the `moon new` command, a `src` directory "
"will be automatically generated, and the default value of the `source` "
"field will be `src`."
msgstr ""

#: ../../toolchain/moon/module.md:102
msgid ""
"{\n"
"  \"source\": \"src\"\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/module.md:108
msgid ""
"When the `source` field does not exist, or its value is `null` or an "
"empty string `\"\"`, it is equivalent to setting `\"source\": \".\"`. "
"This means that the source directory is the same as the directory where "
"the `moon.mod.json` file is located."
msgstr ""

#: ../../toolchain/moon/module.md:110
msgid ""
"{\n"
"  \"source\": null\n"
"}\n"
"{\n"
"  \"source\": \"\"\n"
"}\n"
"{\n"
"  \"source\": \".\"\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/module.md:122 ../../toolchain/moon/package.md:224
msgid "Warning List"
msgstr ""

#: ../../toolchain/moon/module.md:124 ../../toolchain/moon/package.md:226
msgid "This is used to disable specific preset compiler warning numbers."
msgstr ""

#: ../../toolchain/moon/module.md:126 ../../toolchain/moon/package.md:228
msgid ""
"For example, in the following configuration, `-2` disables the warning "
"number 2 (Unused variable)."
msgstr ""

#: ../../toolchain/moon/module.md:128 ../../toolchain/moon/package.md:230
msgid ""
"{\n"
"  \"warn-list\": \"-2\",\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/module.md:134 ../../toolchain/moon/package.md:236
msgid ""
"You can use `moonc build-package -warn-help` to see the list of preset "
"compiler warning numbers."
msgstr ""

#: ../../toolchain/moon/module.md:136 ../../toolchain/moon/package.md:238
msgid ""
"$ moonc -v                      \n"
"v0.1.20240914+b541585d3\n"
"\n"
"$ moonc build-package -warn-help\n"
"Available warnings: \n"
"  1 Unused function.\n"
"  2 Unused variable.\n"
"  3 Unused type declaration.\n"
"  4 Redundant case in a pattern matching (unused match case).\n"
"  5 Unused function argument.\n"
"  6 Unused constructor.\n"
"  7 Unused module declaration.\n"
"  8 Unused struct field.\n"
" 10 Unused generic type variable.\n"
" 11 Partial pattern matching.\n"
" 12 Unreachable code.\n"
" 13 Unresolved type variable.\n"
" 14 Lowercase type name.\n"
" 15 Unused mutability.\n"
" 16 Parser inconsistency.\n"
" 18 Useless loop expression.\n"
" 19 Top-level declaration is not left aligned.\n"
" 20 Invalid pragma\n"
" 21 Some arguments of constructor are omitted in pattern.\n"
" 22 Ambiguous block.\n"
" 23 Useless try expression.\n"
" 24 Useless error type.\n"
" 26 Useless catch all.\n"
"  A all warnings\n"
msgstr ""

#: ../../toolchain/moon/module.md:168 ../../toolchain/moon/package.md:270
msgid "Alert List"
msgstr ""

#: ../../toolchain/moon/module.md:170 ../../toolchain/moon/package.md:272
msgid "Disable user preset alerts."
msgstr ""

#: ../../toolchain/moon/module.md:172 ../../toolchain/moon/package.md:274
msgid ""
"{\n"
"  \"alert-list\": \"-alert_1-alert_2\"\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/package.md:1
msgid "Package Configuration"
msgstr ""

#: ../../toolchain/moon/package.md:3
msgid "moon uses the `moon.pkg.json` file to identify and describe a package."
msgstr ""

#: ../../toolchain/moon/package.md:7
msgid ""
"The package name is not configurable; it is determined by the directory "
"name of the package."
msgstr ""

#: ../../toolchain/moon/package.md:9
msgid "is-main"
msgstr ""

#: ../../toolchain/moon/package.md:11
msgid ""
"The `is-main` field is used to specify whether a package needs to be "
"linked into an executable file."
msgstr ""

#: ../../toolchain/moon/package.md:13
msgid ""
"The output of the linking process depends on the backend. When this field"
" is set to `true`:"
msgstr ""

#: ../../toolchain/moon/package.md:15
msgid ""
"For the `wasm` and `wasm-gc` backends, a standalone WebAssembly module "
"will be generated."
msgstr ""

#: ../../toolchain/moon/package.md:16
msgid "For the `js` backend, a standalone JavaScript file will be generated."
msgstr ""

#: ../../toolchain/moon/package.md:18
msgid "import"
msgstr ""

#: ../../toolchain/moon/package.md:20
msgid ""
"The `import` field is used to specify other packages that a package "
"depends on."
msgstr ""

#: ../../toolchain/moon/package.md:22
msgid "test-import"
msgstr ""

#: ../../toolchain/moon/package.md:24
msgid ""
"The `test-import` field is used to specify other packages that the black-"
"box test package of this package depends on."
msgstr ""

#: ../../toolchain/moon/package.md:26
msgid "wbtest-import"
msgstr ""

#: ../../toolchain/moon/package.md:28
msgid ""
"The `wbtest-import` field is used to specify other packages that the "
"white-box test package of this package depends on."
msgstr ""

#: ../../toolchain/moon/package.md:30
msgid "Conditional Compilation"
msgstr ""

#: ../../toolchain/moon/package.md:32
msgid "The smallest unit of conditional compilation is a file."
msgstr ""

#: ../../toolchain/moon/package.md:34
msgid ""
"In a conditional compilation expression, three logical operators are "
"supported: `and`, `or`, and `not`, where the `or` operator can be "
"omitted."
msgstr ""

#: ../../toolchain/moon/package.md:36
msgid ""
"For example, `[\"or\", \"wasm\", \"wasm-gc\"]` can be simplified to "
"`[\"wasm\", \"wasm-gc\"]`."
msgstr ""

#: ../../toolchain/moon/package.md:38
msgid ""
"Conditions in the expression can be categorized into backends and "
"optimization levels:"
msgstr ""

#: ../../toolchain/moon/package.md:40
msgid "**Backend conditions**: `\"wasm\"`, `\"wasm-gc\"`, and `\"js\"`"
msgstr ""

#: ../../toolchain/moon/package.md:41
msgid "**Optimization level conditions**: `\"debug\"` and `\"release\"`"
msgstr ""

#: ../../toolchain/moon/package.md:43
msgid "Conditional expressions support nesting."
msgstr ""

#: ../../toolchain/moon/package.md:45
msgid ""
"If a file is not listed in `\"targets\"`, it will be compiled under all "
"conditions by default."
msgstr ""

#: ../../toolchain/moon/package.md:47
msgid "Example:"
msgstr ""

#: ../../toolchain/moon/package.md:49
msgid ""
"{\n"
"    \"targets\": {\n"
"        \"only_js.mbt\": [\"js\"],\n"
"        \"only_wasm.mbt\": [\"wasm\"],\n"
"        \"only_wasm_gc.mbt\": [\"wasm-gc\"],\n"
"        \"all_wasm.mbt\": [\"wasm\", \"wasm-gc\"],\n"
"        \"not_js.mbt\": [\"not\", \"js\"],\n"
"        \"only_debug.mbt\": [\"debug\"],\n"
"        \"js_and_release.mbt\": [\"and\", [\"js\"], [\"release\"]],\n"
"        \"js_only_test.mbt\": [\"js\"],\n"
"        \"js_or_wasm.mbt\": [\"js\", \"wasm\"],\n"
"        \"wasm_release_or_js_debug.mbt\": [\"or\", [\"and\", \"wasm\", "
"\"release\"], [\"and\", \"js\", \"debug\"]]\n"
"    }\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/package.md:66
msgid "Link Options"
msgstr ""

#: ../../toolchain/moon/package.md:68
msgid ""
"By default, moon only links packages where `is-main` is set to `true`. If"
" you need to link other packages, you can specify this with the `link` "
"option."
msgstr ""

#: ../../toolchain/moon/package.md:70
msgid ""
"The `link` option is used to specify link options, and its value can be "
"either a boolean or an object."
msgstr ""

#: ../../toolchain/moon/package.md:72
msgid ""
"When the `link` value is `true`, it indicates that the package should be "
"linked. The output will vary depending on the backend specified during "
"the build."
msgstr ""

#: ../../toolchain/moon/package.md:74
msgid ""
"{\n"
"  \"link\": true\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/package.md:80
msgid ""
"When the `link` value is an object, it indicates that the package should "
"be linked, and you can specify link options. For detailed configuration, "
"please refer to the subpage for the corresponding backend."
msgstr ""

#: ../../toolchain/moon/package.md:82
msgid "Wasm Backend Link Options"
msgstr ""

#: ../../toolchain/moon/package.md:84 ../../toolchain/moon/package.md:152
msgid "Configurable Options"
msgstr ""

#: ../../toolchain/moon/package.md:86
msgid ""
"The `exports` option is used to specify the function names exported by "
"the `wasm` backend."
msgstr ""

#: ../../toolchain/moon/package.md:88
msgid ""
"For example, in the following configuration, the `hello` function from "
"the current package is exported as the `hello` function in the `wasm` "
"module, and the `foo` function is exported as the `bar` function in the "
"`wasm` module. In the `wasm` host, the `hello` and `bar` functions can be"
" called to invoke the `hello` and `foo` functions from the current "
"package."
msgstr ""

#: ../../toolchain/moon/package.md:90
msgid ""
"{\n"
"  \"link\": {\n"
"    \"wasm\": {\n"
"      \"exports\": [\n"
"        \"hello\",\n"
"        \"foo:bar\"\n"
"      ]\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/package.md:103
msgid ""
"The `heap-start-address` option is used to specify the starting address "
"of the linear memory that can be used when compiling to the `wasm` "
"backend."
msgstr ""

#: ../../toolchain/moon/package.md:105
msgid ""
"For example, the following configuration sets the starting address of the"
" linear memory to 1024."
msgstr ""

#: ../../toolchain/moon/package.md:107
msgid ""
"{\n"
"  \"link\": {\n"
"    \"wasm\": {\n"
"      \"heap-start-address\": 1024\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/package.md:117
msgid ""
"The `import-memory` option is used to specify the linear memory imported "
"by the `wasm` module."
msgstr ""

#: ../../toolchain/moon/package.md:119
msgid ""
"For example, the following configuration specifies that the linear memory"
" imported by the `wasm` module is the `memory` variable from the `env` "
"module."
msgstr ""

#: ../../toolchain/moon/package.md:121
msgid ""
"{\n"
"  \"link\": {\n"
"    \"wasm\": {\n"
"      \"import-memory\": {\n"
"        \"module\": \"env\",\n"
"        \"name\": \"memory\"\n"
"      }\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/package.md:134
msgid ""
"The `export-memory-name` option is used to specify the name of the linear"
" memory exported by the `wasm` module."
msgstr ""

#: ../../toolchain/moon/package.md:136
msgid ""
"{\n"
"  \"link\": {\n"
"    \"wasm\": {\n"
"      \"export-memory-name\": \"memory\"\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/package.md:146
msgid "Wasm GC Backend Link Options"
msgstr ""

#: ../../toolchain/moon/package.md:148
msgid ""
"The link options for the `wasm-gc` backend are similar to those for the "
"`wasm` backend, except there is no `heap-start-address` option."
msgstr ""

#: ../../toolchain/moon/package.md:150
msgid "JS Backend Link Options"
msgstr ""

#: ../../toolchain/moon/package.md:154
msgid ""
"The `exports` option is used to specify the function names to export in "
"the JavaScript module."
msgstr ""

#: ../../toolchain/moon/package.md:156
msgid ""
"For example, in the following configuration, the `hello` function from "
"the current package is exported as the `hello` function in the JavaScript"
" module. In the JavaScript host, the `hello` function can be called to "
"invoke the `hello` function from the current package."
msgstr ""

#: ../../toolchain/moon/package.md:158
msgid ""
"{\n"
"  \"link\": {\n"
"    \"js\": {\n"
"      \"exports\": [\n"
"        \"hello\"\n"
"      ]\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/package.md:170
msgid ""
"The `format` option is used to specify the output format of the "
"JavaScript module."
msgstr ""

#: ../../toolchain/moon/package.md:172
msgid "The currently supported formats are:"
msgstr ""

#: ../../toolchain/moon/package.md:173
msgid "`esm`"
msgstr ""

#: ../../toolchain/moon/package.md:174
msgid "`cjs`"
msgstr ""

#: ../../toolchain/moon/package.md:175
msgid "`iife`"
msgstr ""

#: ../../toolchain/moon/package.md:177
msgid ""
"For example, the following configuration sets the output format of the "
"current package to ES Module."
msgstr ""

#: ../../toolchain/moon/package.md:179
msgid ""
"{\n"
"  \"link\": {\n"
"    \"js\": {\n"
"      \"format\": \"esm\"\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/package.md:189
msgid "Pre-build"
msgstr ""

#: ../../toolchain/moon/package.md:191
msgid ""
"The `\"pre-build\"` field is used to specify pre-build commands, which "
"will be executed before build commands such as `moon check|build|test`."
msgstr ""

#: ../../toolchain/moon/package.md:193
msgid ""
"`\"pre-build\"` is an array, where each element is an object containing "
"`input`, `output`, and `command` fields. The `input` and `output` fields "
"can be strings or arrays of strings, while the `command` field is a "
"string. In the `command`, you can use any shell commands, as well as the "
"`$input` and `$output` variables, which represent the input and output "
"files, respectively. If these fields are arrays, they will be joined with"
" spaces by default."
msgstr ""

#: ../../toolchain/moon/package.md:195
msgid ""
"Currently, there is a built-in special command `:embed`, which converts "
"files into MoonBit source code. The `--text` parameter is used to embed "
"text files, and `--binary` is used for binary files. `--text` is the "
"default and can be omitted. The `--name` parameter is used to specify the"
" generated variable name, with `resource` being the default. The command "
"is executed in the directory where the `moon.pkg.json` file is located."
msgstr ""

#: ../../toolchain/moon/package.md:197
msgid ""
"{\n"
"  \"pre-build\": [\n"
"    {\n"
"      \"input\": \"a.txt\",\n"
"      \"output\": \"a.mbt\",\n"
"      \"command\": \":embed -i $input -o $output\"\n"
"    }\n"
"  ]\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/package.md:209
msgid "If the content of `a.txt` in the current package directory is:"
msgstr ""

#: ../../toolchain/moon/package.md:210
msgid ""
"hello,\n"
"world\n"
msgstr ""

#: ../../toolchain/moon/package.md:215
msgid ""
"After running `moon build`, the following `a.mbt` file will be generated "
"in the directory where the `moon.pkg.json` is located:"
msgstr ""

#: ../../toolchain/moon/package.md:217
msgid ""
"let resource : String =\n"
"  #|hello,\n"
"  #|world\n"
"  #|\n"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:1
msgid "MoonBit's Package Manager Tutorial"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:3
msgid "Overview"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:5
msgid ""
"MoonBit's build system seamlessly integrates package management and "
"documentation generation tools, allowing users to easily fetch "
"dependencies from mooncakes.io, access module documentation, and publish "
"new modules."
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:7
msgid ""
"[mooncakes.io](https://mooncakes.io/) is a centralized package management"
" platform. Each module has a corresponding configuration file "
"`moon.mod.json`, which is the smallest unit for publishing. Under the "
"module's path, there can be multiple packages, each corresponding to a "
"`moon.pkg.json` configuration file. The `.mbt` files at the same level as"
" `moon.pkg.json` belong to this package."
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:9
msgid ""
"Before getting started, make sure you have installed "
"[moon](https://www.moonbitlang.com/download/)."
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:11
msgid "Setup mooncakes.io account"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:13
msgid "**Note: If you don't need to publishing, you can skip this step.**"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:15
msgid ""
"If you don't have an account on mooncakes.io, run `moon register` and "
"follow the guide. If you have previously registered an account, you can "
"use `moon login` to log in."
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:17
msgid ""
"When you see the following message, it means you have successfully logged"
" in:"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:19
msgid "API token saved to ~/.moon/credentials.json\n"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:23
msgid "Update index"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:25
msgid "Use `moon update` to update the mooncakes.io index."
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:27
msgid "![moon update cli](/imgs/moon-update.png)"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:27
msgid "moon update cli"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:29
msgid "Setup MoonBit project"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:31
msgid "Open an existing project or create a new project via `moon new`:"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:33
msgid "![moon new](/imgs/moon-new.png)"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:33
msgid "moon new"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:35
msgid "Add dependencies"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:37
msgid ""
"You can browse all available modules on mooncakes.io. Use `moon add` to "
"add the dependencies you need, or manually edit the `deps` field in "
"`moon.mod.json`."
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:39
msgid ""
"For example, to add the latest version of the `Yoorkin/example/list` "
"module:"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:41
msgid "![add deps](/imgs/add-deps.png)"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:41
msgid "add deps"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:43
msgid "Import packages from module"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:45
msgid ""
"Modify the configuration file `moon.pkg.json` and declare the packages "
"that need to be imported in the `import` field."
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:47
msgid ""
"For example, in the image below, the `hello/main/moon.pkg.json` file is "
"modified to declare the import of `Yoorkin/example/list` in the `main` "
"package. Now, you can call the functions of the third-party package in "
"the `main` package using `@list`."
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:49
msgid "![import package](/imgs/import.png)"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:49
msgid "import package"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:51
msgid "You can also give an alias to the imported package:"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:53
msgid ""
"{\n"
"    \"is_main\": true,\n"
"    \"import\": [\n"
"        { \"path\": \"Yoorkin/example/list\", \"alias\": \"ls\" }\n"
"    ]\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:62
msgid ""
"Read the documentation of this module on mooncakes.io, we can use its "
"`of_array` and `reverse` functions to implement a new function "
"`reverse_array`."
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:64
msgid "![reverse array](/imgs/reverse-array.png)"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:64
msgid "reverse array"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:66
msgid "Remove dependencies"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:68
msgid "You can remove dependencies via `moon remove <module name>`."
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:70
msgid "Publish your module"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:72
msgid ""
"If you are ready to share your module, use `moon publish` to push a "
"module to mooncakes.io. There are some important considerations to keep "
"in mind before publishing:"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:75
msgid "Semantic versioning convention"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:77
msgid ""
"MoonBit's package management follows the convention of [Semantic "
"Versioning](https://semver.org/). Each module must define a version "
"number in the format `MAJOR.MINOR.PATCH`. With each push, the module must"
" increment the:"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:79
msgid "MAJOR version when you make incompatible API changes"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:80
msgid "MINOR version when you add functionality in a backward compatible manner"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:81
msgid "PATCH version when you make backward compatible bug fixes"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:83
msgid ""
"Additional labels for pre-release and build metadata are available as "
"extensions to the `MAJOR.MINOR.PATCH` format."
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:85
msgid ""
"moon implements the [minimal version "
"selection](https://research.swtch.com/vgo-mvs), which automatically "
"handles and installs dependencies based on the module's semantic "
"versioning information. Minimal version selection assumes that each "
"module declares its own dependency requirements and follows semantic "
"versioning convention, aiming to make the user's dependency graph as "
"close as possible to the author's development-time dependencies."
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:87
msgid "Readme & metadata"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:89
msgid "Metadata in `moon.mod.json` and `README.md` will be shown in mooncakes.io."
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:91
msgid "Metadata consist of the following sections:"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:93
msgid ""
"`license`: license of this module, it following the "
"[SPDX](https://spdx.dev/about/overview/) convention"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:94
msgid "`keywords`: keywords of this module"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:95
msgid "`repository`: URL of the package source repository"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:96
msgid "`description`: short description to this module"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:97
msgid "`homepage`: URL of the module homepage"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:99
msgid "Moondoc"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:101
msgid "mooncakes.io will generate documentation for each modules automatically."
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:103
msgid ""
"The leading `///` comments of each toplevel will be recognized as "
"documentation. You can write markdown inside."
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:106
msgid ""
"/// Get the largest element of a non-empty `Array`.\n"
"///\n"
"/// # Example\n"
"///\n"
"/// ```\n"
"/// maximum([1,2,3,4,5,6]) = 6\n"
"/// ```\n"
"///\n"
"/// # Panics\n"
"///\n"
"/// Panics if the `xs` is empty.\n"
"///\n"
"pub fn maximum[T : Compare](xs : Array[T]) -> T {\n"
"  // TODO ...\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/package-manage-tour.md:124
msgid ""
"You can also use `moon doc --serve` to generate and view documentation in"
" local."
msgstr ""

#: ../../toolchain/moon/tutorial.md:1
msgid "MoonBit's Build System Tutorial"
msgstr ""

#: ../../toolchain/moon/tutorial.md:3
msgid ""
"Moon is the build system for the MoonBit language, currently based on the"
" [n2](https://github.com/evmar/n2) project. Moon supports parallel and "
"incremental builds. Additionally, moon also supports managing and "
"building third-party packages on [mooncakes.io](https://mooncakes.io/)"
msgstr ""

#: ../../toolchain/moon/tutorial.md:5
msgid "Prerequisites"
msgstr ""

#: ../../toolchain/moon/tutorial.md:7
msgid ""
"Before you begin with this tutorial, make sure you have installed the "
"following:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:9
msgid ""
"**MoonBit CLI Tools**: Download it from the "
"<https://www.moonbitlang.com/download/>. This command line tool is needed"
" for creating and managing MoonBit projects."
msgstr ""

#: ../../toolchain/moon/tutorial.md:11
msgid "Use `moon help` to view the usage instructions."
msgstr ""

#: ../../toolchain/moon/tutorial.md:13
msgid ""
"$ moon help\n"
"...\n"
msgstr ""

#: ../../toolchain/moon/tutorial.md:18
msgid ""
"**MoonBit Language** plugin in Visual Studio Code: You can install it "
"from the VS Code marketplace. This plugin provides a rich development "
"environment for MoonBit, including functionalities like syntax "
"highlighting, code completion, and more."
msgstr ""

#: ../../toolchain/moon/tutorial.md:20
msgid ""
"Once you have these prerequisites fulfilled, let's start by creating a "
"new MoonBit module."
msgstr ""

#: ../../toolchain/moon/tutorial.md:22
msgid "Creating a New Module"
msgstr ""

#: ../../toolchain/moon/tutorial.md:24
msgid ""
"To create a new module, enter the `moon new` command in the terminal, and"
" you will see the module creation wizard. By using all the default "
"values, you can create a new module named `username/hello` in the `my-"
"project` directory."
msgstr ""

#: ../../toolchain/moon/tutorial.md:26
msgid ""
"$ moon new\n"
"Enter the path to create the project (. for current directory): my-"
"project\n"
"Select the create mode: exec\n"
"Enter your username: username\n"
"Enter your project name: hello\n"
"Enter your license: Apache-2.0\n"
"Created my-project\n"
msgstr ""

#: ../../toolchain/moon/tutorial.md:36
msgid ""
"If you want use all default values, you can use `moon new my-project` to "
"create a new module named `username/hello` in the `my-project` directory."
msgstr ""

#: ../../toolchain/moon/tutorial.md:38
msgid "Understanding the Module Directory Structure"
msgstr ""

#: ../../toolchain/moon/tutorial.md:40
msgid ""
"After creating the new module, your directory structure should resemble "
"the following:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:42
msgid ""
"my-project\n"
"├── LICENSE\n"
"├── README.md\n"
"├── moon.mod.json\n"
"└── src\n"
"    ├── lib\n"
"    │   ├── hello.mbt\n"
"    │   ├── hello_test.mbt\n"
"    │   └── moon.pkg.json\n"
"    └── main\n"
"        ├── main.mbt\n"
"        └── moon.pkg.json\n"
msgstr ""

#: ../../toolchain/moon/tutorial.md:57
msgid "Here's a brief explanation of the directory structure:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:59
msgid ""
"`moon.mod.json` is used to identify a directory as a MoonBit module. It "
"contains the module's metadata, such as the module name, version, etc. "
"`source` specifies the source directory of the module. The default value "
"is `src`."
msgstr ""

#: ../../toolchain/moon/tutorial.md:61
msgid ""
"{\n"
"  \"name\": \"username/hello\",\n"
"  \"version\": \"0.1.0\",\n"
"  \"readme\": \"README.md\",\n"
"  \"repository\": \"\",\n"
"  \"license\": \"Apache-2.0\",\n"
"  \"keywords\": [],\n"
"  \"description\": \"\",\n"
"  \"source\": \"src\"\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/tutorial.md:74
msgid ""
"`lib` and `main` directories: These are the packages within the module. "
"Each package can contain multiple `.mbt` files, which are the source code"
" files for the MoonBit language. However, regardless of how many `.mbt` "
"files a package has, they all share a common `moon.pkg.json` file. "
"`lib/*_test.mbt` are separate test files in the `lib` package, these "
"files are for blackbox test, so private members of the `lib` package "
"cannot be accessed directly."
msgstr ""

#: ../../toolchain/moon/tutorial.md:76
msgid ""
"`moon.pkg.json` is package descriptor. It defines the properties of the "
"package, such as whether it is the main package and the packages it "
"imports."
msgstr ""

#: ../../toolchain/moon/tutorial.md:78
msgid "`main/moon.pkg.json`:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:80 ../../toolchain/moon/tutorial.md:157
msgid ""
"{\n"
"  \"is_main\": true,\n"
"  \"import\": [\n"
"    \"username/hello/lib\"\n"
"  ]\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/tutorial.md:89
msgid ""
"Here, `\"is_main: true\"` declares that the package needs to be linked by"
" the build system into a wasm file."
msgstr ""

#: ../../toolchain/moon/tutorial.md:91
msgid "`lib/moon.pkg.json`:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:93 ../../toolchain/moon/tutorial.md:210
msgid "{}\n"
msgstr ""

#: ../../toolchain/moon/tutorial.md:97
msgid ""
"This file is empty. Its purpose is simply to inform the build system that"
" this folder is a package."
msgstr ""

#: ../../toolchain/moon/tutorial.md:99
msgid "Working with Packages"
msgstr ""

#: ../../toolchain/moon/tutorial.md:101
msgid ""
"Our `username/hello` module contains two packages: `username/hello/lib` "
"and `username/hello/main`."
msgstr ""

#: ../../toolchain/moon/tutorial.md:103
msgid ""
"The `username/hello/lib` package contains `hello.mbt` and "
"`hello_test.mbt` files:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:105
msgid "`hello.mbt`"
msgstr ""

#: ../../toolchain/moon/tutorial.md:107
msgid ""
"pub fn hello() -> String {\n"
"    \"Hello, world!\"\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/tutorial.md:113
msgid "`hello_test.mbt`"
msgstr ""

#: ../../toolchain/moon/tutorial.md:115
msgid ""
"test \"hello\" {\n"
"  if @lib.hello() != \"Hello, world!\" {\n"
"    fail!(\"@lib.hello() != \\\"Hello, world!\\\"\")\n"
"  }\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/tutorial.md:123
msgid "The `username/hello/main` package contains a `main.mbt` file:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:125
msgid ""
"fn main {\n"
"  println(@lib.hello())\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/tutorial.md:131
msgid ""
"To execute the program, specify the file system's path to the "
"`username/hello/main` package in the `moon run` command:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:133
msgid ""
"$ moon run ./src/main\n"
"Hello, world!\n"
msgstr ""

#: ../../toolchain/moon/tutorial.md:138
msgid "You can also omit `./`"
msgstr ""

#: ../../toolchain/moon/tutorial.md:140
msgid ""
"$ moon run src/main\n"
"Hello, world!\n"
msgstr ""

#: ../../toolchain/moon/tutorial.md:145
msgid "You can test using the `moon test` command:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:147
msgid ""
"$ moon test\n"
"Total tests: 1, passed: 1, failed: 0.\n"
msgstr ""

#: ../../toolchain/moon/tutorial.md:152
msgid "Package Importing"
msgstr ""

#: ../../toolchain/moon/tutorial.md:154
msgid ""
"In the MoonBit's build system, a module's name is used to reference its "
"internal packages. To import the `username/hello/lib` package in "
"`src/main/main.mbt`, you need to specify it in `src/main/moon.pkg.json`:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:166
msgid ""
"Here, `username/hello/lib` specifies importing the `username/hello/lib` "
"package from the `username/hello` module, so you can use `@lib.hello()` "
"in `main/main.mbt`."
msgstr ""

#: ../../toolchain/moon/tutorial.md:168
msgid ""
"Note that the package name imported in `src/main/moon.pkg.json` is "
"`username/hello/lib`, and `@lib` is used to refer to this package in "
"`src/main/main.mbt`. The import here actually generates a default alias "
"for the package name `username/hello/lib`. In the following sections, you"
" will learn how to customize the alias for a package."
msgstr ""

#: ../../toolchain/moon/tutorial.md:170
msgid "Creating and Using a New Package"
msgstr ""

#: ../../toolchain/moon/tutorial.md:172
msgid "First, create a new directory named `fib` under `lib`:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:174
msgid "mkdir src/lib/fib\n"
msgstr ""

#: ../../toolchain/moon/tutorial.md:178
msgid "Now, you can create new files under `src/lib/fib`:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:180
msgid "`a.mbt`:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:182
msgid ""
"pub fn fib(n : Int) -> Int {\n"
"  match n {\n"
"    0 => 0\n"
"    1 => 1\n"
"    _ => fib(n - 1) + fib(n - 2)\n"
"  }\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/tutorial.md:192
msgid "`b.mbt`:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:194
msgid ""
"pub fn fib2(num : Int) -> Int {\n"
"  fn aux(n, acc1, acc2) {\n"
"    match n {\n"
"      0 => acc1\n"
"      1 => acc2\n"
"      _ => aux(n - 1, acc2, acc1 + acc2)\n"
"    }\n"
"  }\n"
"\n"
"  aux(num, 0, 1)\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/tutorial.md:208
msgid "`moon.pkg.json`:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:214
msgid ""
"After creating these files, your directory structure should look like "
"this:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:216
msgid ""
"my-project\n"
"├── LICENSE\n"
"├── README.md\n"
"├── moon.mod.json\n"
"└── src\n"
"    ├── lib\n"
"    │   ├── fib\n"
"    │   │   ├── a.mbt\n"
"    │   │   ├── b.mbt\n"
"    │   │   └── moon.pkg.json\n"
"    │   ├── hello.mbt\n"
"    │   ├── hello_test.mbt\n"
"    │   └── moon.pkg.json\n"
"    └── main\n"
"        ├── main.mbt\n"
"        └── moon.pkg.json\n"
msgstr ""

#: ../../toolchain/moon/tutorial.md:235
msgid ""
"In the `src/main/moon.pkg.json` file, import the `username/hello/lib/fib`"
" package and customize its alias to `my_awesome_fibonacci`:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:237
msgid ""
"{\n"
"  \"is_main\": true,\n"
"  \"import\": [\n"
"    \"username/hello/lib\",\n"
"    {\n"
"      \"path\": \"username/hello/lib/fib\",\n"
"      \"alias\": \"my_awesome_fibonacci\"\n"
"    }\n"
"  ]\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/tutorial.md:250
msgid ""
"This line imports the `fib` package, which is part of the `lib` package "
"in the `hello` module. After doing this, you can use the `fib` package in"
" `main/main.mbt`. Replace the file content of `main/main.mbt` to:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:252
msgid ""
"fn main {\n"
"  let a = @my_awesome_fibonacci.fib(10)\n"
"  let b = @my_awesome_fibonacci.fib2(11)\n"
"  println(\"fib(10) = \\{a}, fib(11) = \\{b}\")\n"
"\n"
"  println(@lib.hello())\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/tutorial.md:262
msgid "To execute your program, specify the path to the `main` package:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:264
msgid ""
"$ moon run ./src/main\n"
"fib(10) = 55, fib(11) = 89\n"
"Hello, world!\n"
msgstr ""

#: ../../toolchain/moon/tutorial.md:270
msgid "Adding Tests"
msgstr ""

#: ../../toolchain/moon/tutorial.md:272
msgid ""
"Let's add some tests to verify our fib implementation. Add the following "
"content in `src/lib/fib/a.mbt`:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:274
msgid "`src/lib/fib/a.mbt`"
msgstr ""

#: ../../toolchain/moon/tutorial.md:276
msgid ""
"test {\n"
"  assert_eq!(fib(1), 1)\n"
"  assert_eq!(fib(2), 1)\n"
"  assert_eq!(fib(3), 2)\n"
"  assert_eq!(fib(4), 3)\n"
"  assert_eq!(fib(5), 5)\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/tutorial.md:286
msgid ""
"This code tests the first five terms of the Fibonacci sequence. `test { "
"... }` defines an inline test block. The code inside an inline test block"
" is executed in test mode."
msgstr ""

#: ../../toolchain/moon/tutorial.md:288
msgid ""
"Inline test blocks are discarded in non-test compilation modes (`moon "
"build` and `moon run`), so they won't cause the generated code size to "
"bloat."
msgstr ""

#: ../../toolchain/moon/tutorial.md:290
msgid "Stand-alone test files for blackbox tests"
msgstr ""

#: ../../toolchain/moon/tutorial.md:292
msgid ""
"Besides inline tests, MoonBit also supports stand-alone test files. "
"Source files ending in `_test.mbt` are considered test files for blackbox"
" tests. For example, inside the `src/lib/fib` directory, create a file "
"named `fib_test.mbt` and paste the following code:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:294
msgid "`src/lib/fib/fib_test.mbt`"
msgstr ""

#: ../../toolchain/moon/tutorial.md:296
msgid ""
"test {\n"
"  assert_eq!(@fib.fib(1), 1)\n"
"  assert_eq!(@fib.fib2(2), 1)\n"
"  assert_eq!(@fib.fib(3), 2)\n"
"  assert_eq!(@fib.fib2(4), 3)\n"
"  assert_eq!(@fib.fib(5), 5)\n"
"}\n"
msgstr ""

#: ../../toolchain/moon/tutorial.md:306
msgid ""
"Notice that the test code uses `@fib` to refer to the "
"`username/hello/lib/fib` package. The build system automatically creates "
"a new package for blackbox tests by using the files that end with "
"`_test.mbt`. This new package will import the current package "
"automatically, allowing you to use `@lib` in the test code."
msgstr ""

#: ../../toolchain/moon/tutorial.md:308
msgid ""
"Finally, use the `moon test` command, which scans the entire project, "
"identifies, and runs all inline tests as well as files ending with "
"`_test.mbt`. If everything is normal, you will see:"
msgstr ""

#: ../../toolchain/moon/tutorial.md:310
msgid ""
"$ moon test\n"
"Total tests: 3, passed: 3, failed: 0.\n"
"$ moon test -v\n"
"test username/hello/lib/hello_test.mbt::hello ok\n"
"test username/hello/lib/fib/a.mbt::0 ok\n"
"test username/hello/lib/fib/fib_test.mbt::0 ok\n"
"Total tests: 3, passed: 3, failed: 0.\n"
msgstr ""

