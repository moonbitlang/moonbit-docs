(module (data $moonbit.string_data " ")
 (memory $moonbit.memory (export "moonbit.memory") 1)
 (table $rael.global funcref (elem))
 (func $fib.fn/1 (param $num/25 i32) (result i32) (local $n/22 i32)
  (local $acc1/23 i32) (local $acc2/24 i32)
  (block $join:21 (local.get $num/25) (i32.const 0) (i32.const 1)
   (local.set $acc2/24) (local.set $acc1/23) (local.set $n/22) (br $join:21))
  (loop $join:21 (result i32)
   (if (result i32) (i32.eq (local.get $n/22) (i32.const 0))
    (then (local.get $acc1/23))
    (else
     (if (result i32) (i32.eq (local.get $n/22) (i32.const 1))
      (then (local.get $acc2/24))
      (else (local.get $n/22) (i32.const 1) (i32.sub) (local.get $acc2/24)
       (local.get $acc1/23) (local.get $acc2/24) (i32.add)
       (local.set $acc2/24) (local.set $acc1/23) (local.set $n/22)
       (br $join:21)))))))
 (func $test.fn/2 (export "test") (param $n/29 i32) (param $count/28 i32)
  (result i32) (local $i/26 i32) (local $res/27 i32) (i32.const 0)
  (local.set $i/26) (i32.const 0) (local.set $res/27)
  (block $block/31
   (loop $loop/30 (local.get $i/26) (local.get $count/28) (i32.lt_s)
    (i32.eqz) (br_if $block/31)
    (block $continue/32 (local.get $n/29) (call $fib.fn/1)
     (local.set $res/27) (i32.const 0) (drop))
    (local.get $i/26) (i32.const 1) (i32.add) (local.set $i/26) (i32.const 0)
    (br $loop/30)))
  (local.get $res/27))
 (func $*init*/3) (export "_start" (func $*init*/3)))